# Make vim the default editor
export EDITOR="vim"

# Larger bash history (allow 32³ entries; default is 500)
export HISTSIZE=32768
export HISTFILESIZE=$HISTSIZE
export HISTCONTROL=ignoredups:erasedups
# Make some commands not show up in history
export HISTIGNORE="ls:cd:cd -:pwd:exit:date:* --help"

# Prefer US English and use UTF-8
export LANG="en_US"
export LC_ALL="en_US.UTF-8"

# Highlight section titles in manual pages
export LESS_TERMCAP_md="$ORANGE"

# Don’t clear the screen after quitting a manual page
export MANPAGER="less -X"

# Always enable colored `grep` output
export GREP_OPTIONS="--color=auto"

# Link Homebrew casks in `/Applications` rather than `~/Applications`
export HOMEBREW_CASK_OPTS="--appdir=/Applications"

if [ "$(uname -s)" = "Darwin" ] ; then
  JAVA_HOME=$(/usr/libexec/java_home 1.8.0_31)
  export DYLD_LIBRARY_PATH=/usr/local/mysql/lib:$DYLD_LIBRARY_PATH
fi

# Set Archflags for mavricks
if [ "$(sw_vers -productVersion | cut -d'.' -f1-2)" = "10.9" ] ; then
  export ARCHFLAGS="-arch x86_64"
fi


#This formula is keg-only, so it was not symlinked into /usr/local.
##Mac OS X already provides this software and installing another version in
##parallel can cause all kinds of trouble.
##OS X provides an older sqlite3.
##Generally there are no consequences of this for you. If you build your
##own software and it requires this formula, you'll need to add to your
##build variables:
##
##    LDFLAGS:  -L/usr/local/opt/sqlite/lib
##    CPPFLAGS: -I/usr/local/opt/sqlite/include

export LDFLAGS='-L/usr/local/opt/sqlite/lib:-L/usr/local/opt/openssl/lib:-L/usr/local/opt/icu4c/lib'
export CPPFLAGS='-I/usr/local/opt/sqlite/include:-I/usr/local/opt/openssl/include:-I/usr/local/opt/icu4c/include'
export PKG_CONFIG_PATH="/usr/local/opt/openssl/lib/pkgconfig:/usr/local/opt/icu4c/lib/pkgconfig"

if [ -d /usr/local/opt/go/libexec ] ; then
  export GOROOT=/usr/local/opt/go/libexec
else
  export GOROOT=$HOME/projects/golang
fi

#export DOCKER_HOST=tcp://192.168.59.103:2375

#command -v gpg-agent >/dev/null 2>&1
#if [ $? -eq 0 ] ; then
#  gpg-agent --daemon --enable-ssh-support \
#        --write-env-file "${HOME}/.gpg-agent-info"
#  if [ -f "${HOME}/.gpg-agent-info" ]; then
#     . "${HOME}/.gpg-agent-info"
#    export GPG_AGENT_INFO
#    export SSH_AUTH_SOCK
#    export SSH_AGENT_PID
#  fi
#  
#  GPG_TTY=$(tty)
#  export GPG_TTY
#fi
#
if [ -f ~/.exports.local ] ; then
  source ~/.exports.local
fi

export HOMEBREW_NO_ANALYTICS=1

